/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    // int maxd=0;
    int fun(TreeNode* root,int &maxd)
    {
         
        if(root==NULL)
        return 0;

        int l = fun(root->left, maxd);
        int r = fun(root->right, maxd);
       
        maxd = max(l+r,maxd);



        return (1+max(l,r));

        
   
    }
    int diameterOfBinaryTree(TreeNode* root)
     {
            if(root==NULL)
            return 0;

            int maxd=INT_MIN;

          fun(root,maxd);
            return maxd;


     }
};
