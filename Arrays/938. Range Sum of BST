/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
 
    int rangeSumBST(TreeNode* root, int low, int high) {
            int sum=0;
        
        if(root==NULL)
        {
            return 0;
        }
        
        
       if(root->val > high)
       {
            sum = rangeSumBST(root->left,low,high);
       }
        
        else if(root->val < low)
       {
             sum = rangeSumBST(root->right,low,high);
       }
        
       else if(root->val >= low && root->val <= high)
       {
           
//            sum += root->val;
//            rangeSumBST(root->left,low,high) ;
//            rangeSumBST(root->right,low,high) ;
            
               // sum = sum +  
               int a = rangeSumBST(root->left,low,high);
               cout<<a<<endl;
               int b =  rangeSumBST(root->right,low,high) + root->val;
               cout<<b<<endl;              
               sum = sum + a+ b;
           cout<<"sum :"<<sum<<endl;

       }
        
         return sum;
       }   
          
};    
